{
"infra_validate_null_if_null":"select * from flowfile except(select * from flowfile where UPPER(school_id) <> 'NULL')",
"infra_validate_null_if_not_null":"select * from flowfile where UPPER(school_id) <> 'NULL'",
"infra_count_null_values":'''(select SUM(CASE when school_id IS NULL THEN 1 ELSE 0 END) AS count_null_schoolid
from flowfile)''',
"infra_save_null_count_to_db":"infra_null_col",
"infra_update_null_to_log":'''update log_summary SET school_id = infra_null_col.count_null_schoolid from infra_null_col where infra_null_col.ff_uuid = log_summary.ff_uuid''',
"infra_mst_dup_check":"SELECT school_id,count(school_id)-1 as  num_of_times FROM flowfile GROUP BY school_id HAVING  COUNT(*) > 1",
"same_id_infra_trans":'''select *,count(*) as num_of_times from (select school_id from ( select school_id,count(*) over (partition by school_id) as rn from FLOWFILE) sq Where rn >1) group by  school_id''',
"distinct_infra_trans":"select school_id from(select school_id,row_number() over (partition by  school_id) as rn from flowfile)sq where rn=1",
"infra_distinct_infra_trans":"SELECT school_id from (SELECT school_id,count(*) over (partition by school_id) as rn from FLOWFILE) sq Where rn =1",
"infra_check_for_non_blank":"SELECT school_id from (SELECT school_id,count(*) over (partition by school_id) as rn from FLOWFILE) sq Where rn =1",
"infra_normalize":'''select school_id ,
case when HaveDrinkingWater = 0 or HaveDrinkingWater is null then 0 else 1 end as drinking_water,
case when NoOfToilet=0 or NoOfToilet is null then 0 else NoOfToilet end as toilet,
case when HaveCWSNToilet = 0 or HaveCWSNToilet is null then 0 else 1 end as cwsn_toilet,
case when HaveElectricity = 0 or HaveElectricity is null then 0 else 1 end as electricity,
case when HaveCCTV = 0 or HaveCCTV is null then 0 else 1 end as cctv,
case when tap_water_functional = 0 or tap_water_functional is null then 0 else tap_water_functional end as tap_water,
case when handwash_yn = 0 or handwash_yn is null then 0 else 1 end as handwash,
case when playground_yn = 0 or playground_yn is null then 0 else 1 end as playground,
case when boys_functional_toilet = 0 or boys_functional_toilet is null then 0 else boys_functional_toilet end as boys_toilet,
case when girls_functional_toilet = 0 or girls_functional_toilet is null then 0 else girls_functional_toilet end as girls_toilet,
case when HaveLibrary = 0 or HaveLibrary is null then 0 else 1 end as library from flowfile''',
"infra_tmp_table_name":"infrastructure_temp",
"infra_temp_query":"select insert_infra_trans()",
"infra_trans_to_agg_query":"select insert_infra_agg();",
"infra_district_select_query":"select infra_district_reports('water','toilet');",
"infra_district_map_select_query":"select * from infra_district_map_view;",
"infra_district_table_select_query":"select * from infra_district_table_view;",
"infra_block_infra_fn_select_query":"select infra_block_reports('water','toilet');",
"infra_block_map_select_query":"select * from infra_block_map_view;",
"infra_block_table_select_query":"select * from infra_block_table_view;",
"infra_cluster_infra_fn_select_query":"select infra_cluster_reports('water','toilet');",
"infra_cluster_map_select_query":"select * from infra_cluster_map_view;",
"infra_cluster_table_select_query":"select * from infra_cluster_table_view;",
"infra_school_infra_fn_select_query":"select infra_school_reports('water','toilet');",
"infra_school_map_select_query":"select * from infra_school_map_view;",
"infra_school_table_select_query":"select * from infra_school_table_view;",
"infra_files_from_log":"select * from log_summary where filename like '%infra%'",
"infra_jolt_log":'''
[{
		"operation": "shift",
		"spec": {
			"*": {
				"filename": "[&1].filename",
			   "ff_uuid": "[&1].ff_uuid",
              "total_records": "[&1].total_records",
              "blank_lines": "[&1].blank_lines",
              "duplicate_records": "[&1].duplicate_records",
              "datatype_mismatch": "[&1].datatype_mismatch",
              "school_id": "[&1].records_with_null_value.school_id",
              "processed_records": "[&1].processed_records",
              "process_start_time": "[&1].process_start_time",
              "process_end_time": "[&1].process_end_time"              
			}
		}
	}
]''',
"infra_get_infra_staging_score":"select infrastructure_name,infrastructure_category,score from infrastructure_staging_score",
"update_infra_score_table_name":"infrastructure_staging_score",
"update_infra_score_master":"select update_infra_score();",
"update_infra_new_score":"select insert_infra_agg();",
"infra_sum_of_dup":"select sum(num_of_times) from flowfile",
"update_infra_new_score_pre_qry":'''Drop view if exists insert_infra_agg_view cascade;''',
"infra_district_pre_func":""" select infra_district_mgt_reports('water','toilet');""",
"infra_block_pre_func":"""select infra_block_mgt_reports('water','toilet');""",
"infra_cluster_pre_func":"""select infra_cluster_mgt_reports('water','toilet');""",
"infra_school_pre_func":"""select infra_school_mgt_reports('water','toilet');""",
"infra_district_map_mgt_select_query ":"""select * from infra_district_map_mgt_view;""",
"infra_district_table_mgt_select_query":""" select * from infra_district_table_mgt_view;""",
"infra_block_map_mgt_select_query":"""select * from infra_block_map_mgt_view;""",
"infra_block_table_mgt_select_query":"""select * from infra_block_table_mgt_view;""",
"infra_cluster_map_mgt_select_query":""" select * from infra_cluster_map_mgt_view;""",
"infra_cluster_table_mgt_select_query":"""select * from infra_cluster_table_mgt_view;""",
"infra_school_map_mgt_select_query":"""select * from infra_school_map_mgt_view;""",
"infra_school_table_mgt_select_query ":"""select * from infra_school_table_mgt_view;"""
}
